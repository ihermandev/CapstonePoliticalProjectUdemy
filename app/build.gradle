apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-parcelize'


def keystorePropertiesFile = rootProject.file("keystore/project.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    compileSdkVersion androidCompileSdk

    defaultConfig {
        applicationId 'com.example.android.politicalpreparedness'
        minSdkVersion androidMinSdk
        targetSdkVersion androidTargetSdk
        versionCode codeVersion
        versionName nameVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //Common config fields
        buildConfigField "String", "API_KEY", "\"" + keystoreProperties['API_KEY'] + "\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    //Avoid OS independent path 'META-INF/AL2.0' error
    configurations.all {
        resolutionStrategy {
            exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version_kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$version_kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$version_kotlin_serialization"

    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle_extensions"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    // Core with Ktx
    implementation "androidx.core:core-ktx:$version_core"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit: $version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    //OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:$version_okhttp_interceptor"

    // Moshi
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"
    implementation "com.squareup.moshi:moshi-adapters:$version_moshi"

    // Glide
    implementation "com.github.bumptech.glide:glide:$version_glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$version_glide"

    //Room
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //Logger
    implementation "com.jakewharton.timber:timber:$timber_version"

    //Koin
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-core:$koin_version"

    // Location
    implementation "com.google.android.gms:play-services-location:$version_play_services_location"


    // Dependencies for local unit tests
    testImplementation "junit:junit:$version_junit"
    testImplementation "org.hamcrest:hamcrest-all:$version_hamcrest"
    testImplementation "androidx.arch.core:core-testing:$version_arch_testing"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_kotlin_coroutines"
    testImplementation "org.robolectric:robolectric:$version_robolectric"
    testImplementation "com.google.truth:truth:$version_truth"
    testImplementation "org.mockito:mockito-core:$version_mockito"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$version_androidx_test_core"
    testImplementation "androidx.test.ext:junit-ktx:$version_androidx_test_ext_kotlin_runner"
    testImplementation "androidx.test:rules:$version_androidx_test_rules"


    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core-ktx:$version_androidx_test_core"
    androidTestImplementation "androidx.test.ext:junit-ktx:$version_androidx_test_ext_kotlin_runner"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_kotlin_coroutines"
    androidTestImplementation "androidx.test:rules:$version_androidx_test_rules"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.arch.core:core-testing:$version_arch_testing"
    androidTestImplementation "org.robolectric:annotations:$version_robolectric"
    androidTestImplementation "androidx.test.espresso:espresso-core:$version_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$version_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$version_espresso"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$version_espresso"
    androidTestImplementation "junit:junit:$version_junit"

    androidTestImplementation "org.mockito:mockito-core:$version_mockito"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$version_dex_maker"
    androidTestImplementation "io.insert-koin:koin-test:$koin_version"

    implementation "androidx.test.espresso:espresso-idling-resource:$version_espresso"

    testImplementation "org.jetbrains.kotlin:kotlin-test:$version_kotlin"

    debugImplementation "androidx.fragment:fragment-testing:$version_fragment"
    implementation "androidx.test:core:$version_androidx_test_core"

    androidTestImplementation "androidx.test:runner:$version_test_runner"
    androidTestUtil "androidx.test:orchestrator:$version_test_runner"
}
